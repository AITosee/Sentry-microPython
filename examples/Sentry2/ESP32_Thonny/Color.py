from machine import I2C,UART,Pinfrom  Sentry  import *import timeimport randomflag = 0num = 5x = 0y = 0i = 0def result_output():    global num, flag, x, y, i    # Sentry2不主动返回检测识别结果，需要主控板发送指令进行读取。读取的流程：首先读取识别结果的数量，接收到指令后，Sentry2会刷新结果数据，如果结果数量不为零，那么主控再发送指令读取结果的相关信息。请务必按此流程构建程序。    obj_num = sentry.GetValue(sentry2_vision_e.kVisionColor, sentry_obj_info_e.kStatus)    if obj_num:        print("Totally %d points: "%( obj_num ))        for i in range(1, (obj_num + 1), 1):            if (sentry.GetValue(sentry2_vision_e.kVisionColor,sentry_obj_info_e.kLabel,i)==color_label_e.kColorBlack):              print("point%d: Black"%i)            if (sentry.GetValue(sentry2_vision_e.kVisionColor,sentry_obj_info_e.kLabel,i)==color_label_e.kColorWhite):              print("point%d: White"%i)            if (sentry.GetValue(sentry2_vision_e.kVisionColor,sentry_obj_info_e.kLabel,i)==color_label_e.kColorRed):              print("point%d: Red"%i)            if (sentry.GetValue(sentry2_vision_e.kVisionColor,sentry_obj_info_e.kLabel,i)==color_label_e.kColorGreen):              print("point%d: Green"%i)            if (sentry.GetValue(sentry2_vision_e.kVisionColor,sentry_obj_info_e.kLabel,i)==color_label_e.kColorBlue):              print("point%d: Blue"%i)            if (sentry.GetValue(sentry2_vision_e.kVisionColor,sentry_obj_info_e.kLabel,i)==color_label_e.kColorYellow):                          print("point%d: Yellow"%i)            time.sleep(0.2)        print("\n")        # 等待Sentry2完成操作系统的初始化。此等待时间不可去掉，避免出现Sentry2尚未初始化完毕主控器已经开发发送指令的情况time.sleep(2)# 选择UART或者I2C通讯模式，Sentry2需要进行相应的设置，出厂默认为I2C模式# 参看“设置通讯方式”# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-3########################################################################################################## port = UART(2,rx=Pin(16),tx=Pin(17),baudrate=9600)port = I2C(1,scl=Pin(22),sda=Pin(21),freq=400000)# Sentry2默认通讯地址0x60，支持0x60-0x63四个地址。如果I2C总线挂接多个设备，请避免出现地址冲突sentry = Sentry2(0x60)err = sentry.begin(port)print("sentry.begin: 0x%x"% err)# 算法的默认参数，如果不用更改，则可以删除本行代码sentry.SetParamNum(sentry2_vision_e.kVisionColor,1)# 算法的默认参数，如果不用更改，则可以删除本行代码sentry.SetParam(sentry2_vision_e.kVisionColor,[50, 50, 3, 4, 0],1)  # 1、算法介绍# https://tosee.readthedocs.io/zh/latest/Sentry2/Vision/index.html#chapter-vision-color-index# 2、参考视频# https://www.bilibili.com/video/BV18K411Z7Gh/?spm_id_from=333.1387.upload.video_card.click&vd_source=a6a4a13d17ed26ee248472534a8ec3cc# https://www.bilibili.com/video/BV1pP411s7zR/?spm_id_from=333.1387.homepage.video_card.click&vd_source=a6a4a13d17ed26ee248472534a8ec3cc# 3、环境光对颜色识别与色块检测算法的影响极大：过亮会导致过曝，识别到的颜色均为白色；过暗会导致识别的颜色均为黑色。这两种算法在使用时注意以下几点：# a.出厂默认的“自动”白平衡模式可以满足多数应用需求；# 存在大面积单色（非白色）区域，近距离识别颜色时，图像会发生偏色问题，可以通过摇杆操作或者发送代码设置白平衡模式为“锁定”，操作时需要将sentry2对准白色面，距离10-20cm；# 如果通过代码修改白平衡模式，命令发出后，延时至少500ms，等待设置生效；# 设置白平衡为“锁定”模式且经过白平衡校正操作，重启Sentry2参数依然有效；如果环境光发生改变，需要重新执行白平衡锁定操作。# b.环境过暗时，增加曝光时间在一定程度上可以缓解，但会算法增加检测识别的时间；最有效的方法是进行补光，Sentry2摄像头两侧的LED灯“检测到”与“未检测到”两种情况均设置为白光并且亮度调到最大值可以作为补光灯使用；# c.环境过亮时，降低曝光时间在一定程度上可以缓解；最有效的方法是降低环境光亮度以及避免采用易反光的材料做为地图或者目标物体；# d.当目标物体的颜色较淡时，可以增加成像的饱和度；# “设置LED灯光颜色”与“摄像头设置”请参考如下资料# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-6# 4、正常使用时，应由主控器发送指令控制Sentry2算法的开启与关闭，而非通过摇杆手动进行操作；# 5、满足特定限制条件下，Sentry2可以并行运行多个识别算法# 参看“算法列表”# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-3# 6、如需Sentry2启动后，自行运行某种算法，可以在开启算法后，通过设置“寄存器”->“保存当前值”实现。# 参看“设置寄存器”err = sentry.VisionBegin(sentry2_vision_e.kVisionColor)print("sentry.VisionBegin(sentry2_vision_e.kVisionColor):0x%x"% err)#设置颜色识别算法5组参数sentry.SetParamNum(sentry2_vision_e.kVisionColor,num)#利用随机数，选择5个识别点的初始排列方式flag = (random.randint(1, 4))print("flag= %d"%flag)print("\n")while True:    if (flag == 1):        for i in range(1, (num + 1), 1):            x = (round((i * (100 / (num + 1)))))            y = 50            sentry.SetParam(sentry2_vision_e.kVisionColor,[x, y, 6, 8, 0],i)            time.sleep(0.1)        result_output()        flag += 1    if (flag == 2):        for i in range(1, (num + 1), 1):            x = (round((i * (100 / (num + 1)))))            y = 100-x            sentry.SetParam(sentry2_vision_e.kVisionColor,[x, y, 6, 8, 0],i)            time.sleep(0.1)        result_output()        flag += 1    if (flag == 3):        for i in range(1, (num + 1), 1):            y = (round((i * (100 / (num + 1)))))            x = 50            sentry.SetParam(sentry2_vision_e.kVisionColor,[x, y, 6, 8, 0],i)            time.sleep(0.1)        result_output()        flag += 1    if (flag == 4):        for i in range(1, (num + 1), 1):            x = (round((i * (100 / (num + 1)))))            y = x            sentry.SetParam(sentry2_vision_e.kVisionColor,[x, y, 6, 8, 0],i)            time.sleep(0.1)        result_output()        flag = 1