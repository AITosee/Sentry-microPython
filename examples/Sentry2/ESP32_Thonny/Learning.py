from machine import I2C,UART,Pinfrom  Sentry  import *import time# 等待Sentry2完成操作系统的初始化。此等待时间不可去掉，避免出现Sentry2尚未初始化完毕主控器已经开发发送指令的情况time.sleep(2)# 选择UART或者I2C通讯模式，Sentry2需要进行相应的设置，出厂默认为I2C模式# 参看“设置通讯方式”# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-3########################################################################################################## port = UART(2,rx=Pin(16),tx=Pin(17),baudrate=9600)port = I2C(1,scl=Pin(22),sda=Pin(21),freq=400000)# Sentry2默认通讯地址0x60，支持0x60-0x63四个地址。如果I2C总线挂接多个设备，请避免出现地址冲突sentry = Sentry2(0x60)err = sentry.begin(port)print("sentry.begin: 0x%x"% err) # 1、sentry2消费版可以学习15个物体，企业版可以学习25个物体；除了可以通过摇杆学习外，还可以通过指令进行操作；# 2、为了取得较好的识别效果，学习时的场景（包括但不限背景、灯光、角度等）请与实际使用的场景保持一致或者比较相似；# 3、如果需要在较大的范围内多个角度下均能检测到某个物体，那么需要在不同距离处的不同角度下学习该物体，存储的ID值分别为ID1...IDn，那么使用时，只要获取的label值为上述ID系列中的一个，即可判定检测到目标物体；# 如果上述操作仍无法满足需求，那么请烧录sentry2mv固件，自行采集数据训练模型# https://tosee.readthedocs.io/zh/latest/Sentry2/Sentry2MV/index.html# 4、算法文档# https://tosee.readthedocs.io/zh/latest/Sentry2/Vision/index.html#chapter-vision-Learning-index# 5、参考视频# https://www.bilibili.com/video/BV1n84y1C7yj/?spm_id_from=333.1387.upload.video_card.click&vd_source=a6a4a13d17ed26ee248472534a8ec3cc# https://www.bilibili.com/video/BV1Ej411B7Up/?spm_id_from=333.1387.upload.video_card.click&vd_source=a6a4a13d17ed26ee248472534a8ec3cc# 6、正常使用时，应由主控器发送指令控制Sentry2算法的开启与关闭，而非通过摇杆手动进行操作；# 7、满足特定限制条件下，Sentry2可以并行运行多个识别算法# 参看“算法列表”# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-3# 8、如需Sentry2启动后，自行运行某种算法，可以在开启算法后，通过设置“寄存器”->“保存当前值”实现。# 参看“设置寄存器”err = sentry.VisionBegin(sentry2_vision_e.kVisionLearning)print("sentry.VisionBegin(sentry2_vision_e.kVisionLearning):0x%x"% err)while True:    # Sentry2不主动返回检测识别结果，需要主控板发送指令进行读取。读取的流程：首先读取识别结果的数量，接收到指令后，Sentry2会刷新结果数据，如果结果数量不为零，那么主控再发送指令读取结果的相关信息。请务必按此流程构建程序。    obj_num = sentry.GetValue(sentry2_vision_e.kVisionLearning, sentry_obj_info_e.kStatus)    if obj_num:        print("Totally %d objects: "%obj_num)        for i in range(1,obj_num+1):            #深度学习算法返回的xywh值为固定值，无需读取处理            l = sentry.GetValue(sentry2_vision_e.kVisionLearning, sentry_obj_info_e.kLabel, i)            print("object%d: label=%d"%(i,l))            time.sleep(0.2)            print("\n")