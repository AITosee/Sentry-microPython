import timefrom Sentry import *from mpython import *from machine import UARTuart1 = UART(1, baudrate=57600, tx=Pin.P14, rx=Pin.P13)sentry = Sentry2(0x60)brightness=9# 自定义函数def UART():  global my_variable, i  sentry.begin(uart1)def I2C():  global my_variable, i  sentry.begin(i2c)def Result_Display():  global my_variable, i  oled.fill_rect(0, (2-1)*16, 128, 16, 0)  oled.fill_rect(0, (3-1)*16, 128, 16, 0)  oled.fill_rect(0, (4-1)*16, 128, 16, 0)  oled.show()  # Sentry2不主动返回检测识别结果，需要主控板发送指令进行读取。读取的流程：首先读取识别结果的数量，接收到指令后，Sentry2会刷新结果数据，如果结果数量不为零，那么主控再发送指令读取结果的相关信息。请务必按此流程构建程序。  if ((sentry.GetValue(sentry2_vision_e.kVisionQrCode, sentry_obj_info_e.kStatus)) > 0):    oled.DispChar((sentry.GetQrCodeValue()), 0, (2-1)*16, 1)    # 识别由单词red生成的二维码    if ((sentry.GetQrCodeValue()).find("red")!=-1):      rgb[0] = (255*brightness//9, 0*brightness//9, 0*brightness//9)      rgb.write()    # 识别由单词green生成的二维码    if ((sentry.GetQrCodeValue()).find("green")!=-1):      rgb[0] = (51*brightness//9, 255*brightness//9, 51*brightness//9)      rgb.write()    oled.DispChar((str("x=") + str((sentry.GetValue(sentry2_vision_e.kVisionQrCode,sentry_obj_info_e.kXValue,1)))), 0, 32, 1)    oled.DispChar((str("y=") + str((sentry.GetValue(sentry2_vision_e.kVisionQrCode,sentry_obj_info_e.kYValue,1)))), 64, 32, 1)    oled.DispChar((str("w=") + str((sentry.GetValue(sentry2_vision_e.kVisionQrCode,sentry_obj_info_e.kWidthValue,1)))), 0, 48, 1)    oled.DispChar((str("h=") + str((sentry.GetValue(sentry2_vision_e.kVisionQrCode,sentry_obj_info_e.kHeightValue,1)))), 64, 48, 1)    oled.show()    time.sleep(0.2)    rgb.fill( (0, 0, 0) )    rgb.write()# 等待Sentry2完成操作系统的初始化。此等待时间不可去掉，避免出现Sentry2尚未初始化完毕主控器已经开发发送指令的情况time.sleep(2)I2C()# 1、Sentry2企业版的专有算法，同一时间只可识别并解码一个由不超过10个字符生成的二维码；# 2、Apriltag与二维码不同，请勿混淆。二者在使用时，周围一圈均需要留白；# 3、算法介绍# https://tosee.readthedocs.io/zh/latest/Sentry2/Vision/index.html#chapter-vision-apriltag-index# 3、参考使用视频# https://www.bilibili.com/video/BV1ok4y157jV/?spm_id_from=333.1387.upload.video_card.click&vd_source=a6a4a13d17ed26ee248472534a8ec3cc# 4、使用该算法时，可以配合调整zoom值、锐度、对比度、成像亮度来提升识别的的距离以及识别率。# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-21# 5、正常使用时，应由主控器发送指令控制Sentry2算法的开启与关闭，而非通过摇杆手动进行操作；# 6、如需Sentry2启动后，自行运行某种算法，可以在开启算法后，通过设置“寄存器”->“保存当前值”实现。# 设置寄存器# https://tosee.readthedocs.io/zh/latest/Sentry2/Hardware/index.html#section-3sentry.VisionBegin(sentry2_vision_e.kVisionQrCode)oled.DispChar("Algo:QrCode", 0, (1-1)*16, 1)oled.show()while True:  rgb[2] = (0*brightness//9, 0*brightness//9, 255*brightness//9)  rgb.write()  Result_Display()  rgb[2] = (0*brightness//9, 0*brightness//9, 0*brightness//9)  rgb.write()  time.sleep(0.2)       